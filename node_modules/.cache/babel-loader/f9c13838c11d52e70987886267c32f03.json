{"ast":null,"code":"var _jsxFileName = \"D:\\\\visuacode\\\\code-kingspeed\\\\kingspeed\\\\src\\\\components\\\\Banner.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport useInterval from \"../hooks/userInterval\";\nimport { numberFormat } from \"../utils/MathCommon\";\nimport { useAppSelector } from \"../app/hooks\";\nimport styped from '@emotion/styled';\nimport { Box, HStack, Text } from \"@chakra-ui/react\";\nimport { selectAccount } from \"../reducers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Banner() {\n  _s();\n\n  const {\n    totalStakedAmount\n  } = useAppSelector(selectAccount);\n  const [kscPrice, setKscPrice] = useState(0);\n  const Title = styped(Text)`\n    font-size: 16px;\n    font-weight: 600;\n    line-height: 27px;\n    `;\n  const Value = styped(Text)`\n    font-size: 34px;\n    line-height: 55px;\n    `;\n\n  async function getCurrentKSCPrice() {\n    try {\n      const response = await fetch('https://api.coingecko.com/api/v3/coins/kingspeed');\n\n      if (response.status === 200) {\n        const data = await response.json();\n        const curretPrice = data.market_data.current_price.usd;\n        setKscPrice(curretPrice);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    getCurrentKSCPrice();\n  }, []);\n  useInterval(() => {\n    getCurrentKSCPrice();\n  }, 100 * 60);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: \"40px\",\n    pos: \"relative\",\n    bgSize: \"cover\",\n    bgPosition: \"top\",\n    overflow: \"hidden\",\n    borderBottom: \"1px solid rgb(33, 193, 134 ,0.16)\",\n    bgImage: {\n      base: 'none',\n      md: \"url('/background/banner.webp')\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: \"20px 30px\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        fontSize: \"40px\",\n        fontWeight: \"600\",\n        lineHeight: \"62px\",\n        children: \"Staking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        mt: \"20px\",\n        children: /*#__PURE__*/_jsxDEV(HStack, {\n          spacing: {\n            base: '1.4rem',\n            md: '3.75rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"Total Staked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Value, {\n              color: \"#ffab00\",\n              children: [numberFormat(totalStakedAmount), \" KSC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"Total Value Locked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Value, {\n              color: \"#00aed6\",\n              children: [\"$ \", numberFormat(totalStakedAmount * kscPrice)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"Price KSC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Value, {\n              color: \"#c3fb12\",\n              children: [\"$\", kscPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Banner, \"hWv4RgQ4wgGhulXaJN/7HgCmq54=\", false, function () {\n  return [useAppSelector, useInterval];\n});\n\n_c = Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"sources":["D:/visuacode/code-kingspeed/kingspeed/src/components/Banner.tsx"],"names":["React","useEffect","useState","useInterval","numberFormat","useAppSelector","styped","Box","HStack","Text","selectAccount","Banner","totalStakedAmount","kscPrice","setKscPrice","Title","Value","getCurrentKSCPrice","response","fetch","status","data","json","curretPrice","market_data","current_price","usd","error","console","log","base","md"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport useInterval from \"../hooks/userInterval\";\r\nimport { numberFormat } from \"../utils/MathCommon\";\r\nimport { useAppSelector } from \"../app/hooks\";\r\nimport styped from '@emotion/styled'\r\nimport { Box, HStack, Text } from \"@chakra-ui/react\";\r\nimport { selectAccount } from \"../reducers\";\r\nexport default function Banner(){\r\n    const { totalStakedAmount } = useAppSelector(selectAccount)\r\n    const [kscPrice, setKscPrice] = useState(0)\r\n    const Title = styped (Text) `\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 27px;\r\n    `\r\n    const Value = styped(Text)`\r\n    font-size: 34px;\r\n    line-height: 55px;\r\n    `\r\n\r\n    async function getCurrentKSCPrice() {\r\n        try {\r\n            const response = await fetch('https://api.coingecko.com/api/v3/coins/kingspeed')\r\n            if (response.status === 200){\r\n                const data = await response.json()\r\n                const curretPrice = data.market_data.current_price.usd \r\n                setKscPrice(curretPrice)\r\n            }\r\n        }catch (error){\r\n            console.log(error)\r\n        }\r\n    }\r\n    useEffect (() => {\r\n        getCurrentKSCPrice()\r\n    }, [])\r\n    useInterval(() => {\r\n        getCurrentKSCPrice()\r\n    }, 100 * 60)\r\n    return(\r\n        <Box\r\n        mt=\"40px\"\r\n        pos=\"relative\"\r\n        bgSize=\"cover\"\r\n        bgPosition=\"top\"\r\n        overflow=\"hidden\"\r\n        borderBottom=\"1px solid rgb(33, 193, 134 ,0.16)\"\r\n        bgImage={{ base: 'none', md: \"url('/background/banner.webp')\" }}\r\n    >\r\n        <Box p=\"20px 30px\">\r\n            <Box fontSize=\"40px\" fontWeight=\"600\" lineHeight=\"62px\">\r\n                Staking\r\n            </Box>\r\n            <Box display=\"flex\" mt=\"20px\">\r\n                <HStack spacing={{ base: '1.4rem', md: '3.75rem' }}>\r\n                    <Box>\r\n                        <Title>Total Staked</Title>\r\n                        <Value color=\"#ffab00\">{numberFormat(totalStakedAmount)} KSC</Value>\r\n                    </Box>\r\n                    <Box>\r\n                        <Title>Total Value Locked</Title>\r\n                        <Value color=\"#00aed6\">\r\n                            $ {numberFormat(totalStakedAmount * kscPrice)}\r\n                        </Value>\r\n                    </Box>\r\n                    <Box>\r\n                        <Title>Price KSC</Title>\r\n                        <Value color=\"#c3fb12\">${kscPrice}</Value>\r\n                    </Box>\r\n                </HStack>\r\n            </Box>\r\n        </Box>\r\n     </Box>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}