{"ast":null,"code":"import { setBalanceKSC } from \"./action\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { logout, setWalletAddress, setBalanceBNB, setChainId, setWeb3, setTotalStakedAmount, setIsLoading } from '../reducers';\nimport { notification } from \"../utils/Notification\";\nimport Web3 from 'web3';\nconst BNB_CHAIN = 97;\nconst initialState = {\n  isLoading: false,\n  web3: new Web3(Web3.givenProvider),\n  chainId: typeof window !== 'undefined' && window.localStorage && localStorage.getItem('chainId') ? parseInt(localStorage.getItem('chainId')) : BNB_CHAIN,\n  walletAddress: null,\n  shortAddress: null,\n  balanceBNB: 0,\n  balanceKSC: 0,\n  totalStakedAmount: 0\n};\nexport const accountReducer = createReducer(initialState, builder => {\n  builder.addCase(setIsLoading, (state, _ref) => {\n    let {\n      payload\n    } = _ref;\n    state.isLoading = payload;\n  });\n  builder.addCase(setChainId, (state, _ref2) => {\n    let {\n      payload\n    } = _ref2;\n    localStorage.setItem('chainId', payload.toString());\n    state.chainId = payload;\n  });\n  builder.addCase(setWeb3, (state, _ref3) => {\n    let {\n      payload\n    } = _ref3;\n    state.web3 = payload;\n  });\n  builder.addCase(setWalletAddress, (state, _ref4) => {\n    let {\n      payload\n    } = _ref4;\n    const shortAddress = payload ? `${payload === null || payload === void 0 ? void 0 : payload.substr(0, 4)}...${payload === null || payload === void 0 ? void 0 : payload.substr(payload.length - 4, payload.length - 1)}` : \"\";\n    state.walletAddress = payload;\n    state.shortAddress = shortAddress;\n    notification('Connected successfully', 'info');\n  });\n  builder.addCase(setBalanceBNB, (state, _ref5) => {\n    let {\n      payload\n    } = _ref5;\n    state.balanceBNB = payload;\n  });\n  builder.addCase(setBalanceKSC, (state, _ref6) => {\n    let {\n      payload\n    } = _ref6;\n    state.balanceKSC = payload;\n  });\n  builder.addCase(setTotalStakedAmount, (state, _ref7) => {\n    let {\n      payload\n    } = _ref7;\n    state.totalStakedAmount = payload;\n  });\n  builder.addCase(logout, state => {\n    state.totalStakedAmount = null;\n    state.shortAddress = null;\n    state.balanceBNB = 0;\n  });\n});","map":{"version":3,"sources":["D:/visuacode/code-kingspeed/kingspeed/src/reducers/reducer.ts"],"names":["setBalanceKSC","createReducer","logout","setWalletAddress","setBalanceBNB","setChainId","setWeb3","setTotalStakedAmount","setIsLoading","notification","Web3","BNB_CHAIN","initialState","isLoading","web3","givenProvider","chainId","window","localStorage","getItem","parseInt","walletAddress","shortAddress","balanceBNB","balanceKSC","totalStakedAmount","accountReducer","builder","addCase","state","payload","setItem","toString","substr","length"],"mappings":"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","sourcesContent":["import { setBalanceKSC } from \"./action\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n    logout, \r\n    setWalletAddress,\r\n    setBalanceBNB, \r\n    setChainId,\r\n    setWeb3, \r\n    setTotalStakedAmount, \r\n    setIsLoading \r\n    } from '../reducers'\r\nimport { notification } from \"../utils/Notification\";\r\nimport Web3 from 'web3'\r\nconst BNB_CHAIN = 97 \r\nexport interface AccountState {\r\n    isLoading: boolean\r\n    web3: Web3\r\n    chainId: number | null\r\n    walletAddress: string | null\r\n    shortAddress: string | null\r\n    balanceBNB: number\r\n    balanceKSC: number\r\n    totalStakedAmount: number\r\n}\r\nconst initialState: AccountState ={\r\n    isLoading: false,\r\n    web3: new Web3(Web3.givenProvider),\r\n    chainId: typeof window !== 'undefined' &&  window.localStorage && localStorage.getItem('chainId')\r\n    ? parseInt(localStorage.getItem('chainId')!): BNB_CHAIN,\r\n    walletAddress: null,\r\n    shortAddress: null,\r\n    balanceBNB: 0,\r\n    balanceKSC: 0,\r\n    totalStakedAmount: 0,\r\n}\r\nexport const accountReducer = createReducer(initialState, (builder) => {\r\n    builder.addCase(setIsLoading, (state, { payload }) =>{\r\n    state.isLoading = payload\r\n    }) \r\n    builder.addCase(setChainId, ( state, {payload }) => {\r\n        localStorage.setItem('chainId', payload.toString())\r\n        state.chainId = payload\r\n    })\r\n    builder.addCase(setWeb3, (state, {payload}) => {\r\n        state.web3 = payload\r\n    })\r\n    builder.addCase(setWalletAddress, (state ,{ payload }) => {\r\n        const shortAddress = payload ? `${payload?.substr(0, 4)}...${payload?.substr(\r\n            payload.length - 4,\r\n            payload.length - 1\r\n        )}`: \"\"\r\n        state.walletAddress = payload\r\n        state.shortAddress  = shortAddress\r\n        notification('Connected successfully', 'info')\r\n    })\r\n    builder.addCase(setBalanceBNB, (state, {payload}) => {\r\n        state.balanceBNB = payload\r\n    })\r\n    builder.addCase(setBalanceKSC, (state, { payload}) => {\r\n        state.balanceKSC = payload\r\n    })\r\n    builder.addCase(setTotalStakedAmount, (state, {payload}) =>{\r\n        state.totalStakedAmount = payload\r\n    })\r\n    builder.addCase(logout, (state) => {\r\nstate.totalStakedAmount = null\r\nstate.shortAddress = null\r\nstate.balanceBNB = 0\r\n    })\r\n})\r\n"]},"metadata":{},"sourceType":"module"}