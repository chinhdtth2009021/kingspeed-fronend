{"ast":null,"code":"var _jsxFileName = \"D:\\\\visuacode\\\\code-kingspeed\\\\kingspeed\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport 'scss/global.css';\nimport Staking from './features/Staking';\nimport MyLockedStaking from './features/MyLockedStaking';\nimport KingSpeedToKenContract from './contracts/KingSpeedStakingContac.json';\nimport StakingContract from './contracts/KingSpeedStakingContac.json';\nimport { useAppDispatch } from './app/hooks';\nimport { selectAccount, setBalanceKSC, setTotalStakedAmount } from './reducers';\nimport { Box, Flex } from '@chakra-ui/react';\nimport { parseBalance } from './utils/Helper';\nimport ModalOverlay from './components/ModalOverlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const {\n    walletAddress,\n    web3,\n    isLoading\n  } = useAppDispatch(selectAccount);\n  const [selectTab, setSelectTab] = useState('STAKE');\n\n  const handleClickTab = type => {\n    setSelectTab(type);\n  };\n\n  async function getAvailableKSCToken() {\n    const kingSpeedContract = new web3.eth.Contract(KingSpeedToKenContract.abi, process.env.REACT_APP_KING_SPEED_TOKEN_CONTRACT);\n    const balanceKSC = await kingSpeedContract.methods.balanceOf(walletAddress).call();\n    const convertBalanceKSC = parseBalance(balanceKSC);\n    dispatch(setBalanceKSC(convertBalanceKSC));\n  }\n\n  async function getTotalStaked() {\n    const stakingAddressContract = process.env.REACT_APP_STAKING_CONTRACT;\n    const stakingContract = new web3.eth.Contract(StakingContract.abi, stakingAddressContract);\n    const stakedAmount = await stakingContract.methods.totalStakedAmount().call();\n    const convertAmount = parseBalance(stakedAmount);\n    dispatch(setTotalStakedAmount(convertAmount));\n  }\n\n  useEffect(() => {\n    if (walletAddress) {\n      getAvailableKSCToken();\n    }\n  }, [walletAddress]);\n  useEffect(() => {\n    getTotalStaked();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mt: \"40px\",\n      minW: \"1070px\",\n      overflowX: \"scroll\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          textTransform: \"uppercase\",\n          fontSize: \"18px\",\n          lineHeight: \"50px\",\n          padding: \"0 30px\",\n          cursor: \"pointer\",\n          fontWeight: \"700\",\n          color: selectTab === 'STAKE' ? '#ffffff' : '#8d9fb9',\n          borderBottom: selectTab === 'STAKE' ? '1px solid #00aed6' : 'none',\n          onClick: () => handleClickTab('STAKE'),\n          children: \"Staking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          textTransform: \"uppercase\",\n          fontSize: \"18px\",\n          lineHeight: \"50px\",\n          padding: \"0 30px\",\n          cursor: \"pointer\",\n          fontWeight: \"700\",\n          color: selectTab === 'LOCKED' ? '#ffffff' : '#8d9fb9',\n          borderBottom: selectTab === 'LOCKED' ? '1px solid #00aed6' : 'none',\n          onClick: () => handleClickTab('LOCKED'),\n          children: \"My Locked Staking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        padding: {\n          base: '20px 10px 10px',\n          xl: '20px 30px 10px'\n        },\n        borderRadius: \"10px\",\n        border: \"1px solid rgba(0, 174, 214, 0.33)\",\n        children: selectTab === 'STAKE' ? /*#__PURE__*/_jsxDEV(Staking, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 46\n        }, this) : /*#__PURE__*/_jsxDEV(MyLockedStaking, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"pXMks7E0ar/K2DA4WLdZQJCpCSQ=\", false, function () {\n  return [useAppDispatch, useAppDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/visuacode/code-kingspeed/kingspeed/src/App.tsx"],"names":["React","useState","useEffect","Staking","MyLockedStaking","KingSpeedToKenContract","StakingContract","useAppDispatch","selectAccount","setBalanceKSC","setTotalStakedAmount","Box","Flex","parseBalance","ModalOverlay","App","dispatch","walletAddress","web3","isLoading","selectTab","setSelectTab","handleClickTab","type","getAvailableKSCToken","kingSpeedContract","eth","Contract","abi","process","env","REACT_APP_KING_SPEED_TOKEN_CONTRACT","balanceKSC","methods","balanceOf","call","convertBalanceKSC","getTotalStaked","stakingAddressContract","REACT_APP_STAKING_CONTRACT","stakingContract","stakedAmount","totalStakedAmount","convertAmount","base","xl"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'scss/global.css';\r\nimport Staking from './features/Staking';\r\nimport MyLockedStaking from './features/MyLockedStaking';\r\nimport KingSpeedToKenContract from './contracts/KingSpeedStakingContac.json';\r\nimport StakingContract from './contracts/KingSpeedStakingContac.json';\r\nimport { useAppDispatch, useAppSelector } from './app/hooks';\r\nimport { selectAccount, setBalanceKSC, setTotalStakedAmount, setWeb3} from './reducers';\r\nimport { AbiItem } from 'web3-utils'\r\nimport { Box, Flex } from '@chakra-ui/react'\r\nimport { parseBalance } from './utils/Helper'\r\nimport ModalOverlay from './components/ModalOverlay'\r\nfunction App (){\r\n    const dispatch = useAppDispatch()\r\n    const { walletAddress, web3, isLoading } =  useAppDispatch(selectAccount)\r\n    const [selectTab, setSelectTab] = useState<'STAKE' | 'LOCKED'>('STAKE')\r\n\r\n    const handleClickTab = (type: 'STAKE' | 'LOCKED') => {\r\n        setSelectTab(type)\r\n    }\r\n\r\n    async function getAvailableKSCToken() {\r\n        const kingSpeedContract = new web3.eth.Contract(\r\n            KingSpeedToKenContract.abi as AbiItem[],\r\n            process.env.REACT_APP_KING_SPEED_TOKEN_CONTRACT\r\n        )\r\n\r\n        const balanceKSC = await kingSpeedContract.methods.balanceOf(walletAddress).call()\r\n        const convertBalanceKSC = parseBalance(balanceKSC)\r\n\r\n        dispatch(setBalanceKSC(convertBalanceKSC))\r\n    }\r\n\r\n    async function getTotalStaked() {\r\n        const stakingAddressContract = process.env.REACT_APP_STAKING_CONTRACT\r\n\r\n        const stakingContract = new web3.eth.Contract(\r\n            StakingContract.abi as AbiItem[],\r\n            stakingAddressContract\r\n        )\r\n\r\n        const stakedAmount = await stakingContract.methods.totalStakedAmount().call()\r\n        const convertAmount = parseBalance(stakedAmount)\r\n\r\n        dispatch(setTotalStakedAmount(convertAmount))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (walletAddress) {\r\n            getAvailableKSCToken()\r\n        }\r\n    }, [walletAddress])\r\n\r\n    useEffect(() => {\r\n        getTotalStaked()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Box mt=\"40px\" minW=\"1070px\" overflowX=\"scroll\">\r\n                <Flex alignItems=\"center\" justifyContent=\"center\">\r\n                    <Box\r\n                        textTransform=\"uppercase\"\r\n                        fontSize=\"18px\"\r\n                        lineHeight=\"50px\"\r\n                        padding=\"0 30px\"\r\n                        cursor=\"pointer\"\r\n                        fontWeight=\"700\"\r\n                        color={selectTab === 'STAKE' ? '#ffffff' : '#8d9fb9'}\r\n                        borderBottom={selectTab === 'STAKE' ? '1px solid #00aed6' : 'none'}\r\n                        onClick={() => handleClickTab('STAKE')}\r\n                    >\r\n                        Staking\r\n                    </Box>\r\n                    <Box\r\n                        textTransform=\"uppercase\"\r\n                        fontSize=\"18px\"\r\n                        lineHeight=\"50px\"\r\n                        padding=\"0 30px\"\r\n                        cursor=\"pointer\"\r\n                        fontWeight=\"700\"\r\n                        color={selectTab === 'LOCKED' ? '#ffffff' : '#8d9fb9'}\r\n                        borderBottom={selectTab === 'LOCKED' ? '1px solid #00aed6' : 'none'}\r\n                        onClick={() => handleClickTab('LOCKED')}\r\n                    >\r\n                        My Locked Staking\r\n                    </Box>\r\n                </Flex>\r\n\r\n                <Box\r\n                    padding={{ base: '20px 10px 10px', xl: '20px 30px 10px' }}\r\n                    borderRadius=\"10px\"\r\n                    border=\"1px solid rgba(0, 174, 214, 0.33)\"\r\n                >\r\n                    {selectTab === 'STAKE' ? <Staking /> : <MyLockedStaking />}\r\n                </Box>\r\n            </Box>\r\n\r\n            {isLoading && <ModalOverlay />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}