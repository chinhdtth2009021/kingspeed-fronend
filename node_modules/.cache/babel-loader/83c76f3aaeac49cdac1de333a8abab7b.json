{"ast":null,"code":"var _jsxFileName = \"D:\\\\visuacode\\\\code-kingspeed\\\\kingspeed\\\\src\\\\features\\\\StakeDetail.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Flex, Link, Image, SimpleGrid, Button } from '@chakra-ui/react';\nimport { numberFormat } from \"../utils/MathCommon\";\nimport { formatDateYYYYMMDDHHMMSS } from \"../utils/DateFormat\";\nimport dayjs from \"dayjs\";\nimport NumberFormat from \"react-number-format\";\nimport useInterval from '../hooks/userInterval';\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\nimport { selectAccount, setBalanceKSC, setIsLoading, setTotalStakedAmount } from \"../reducers\";\nimport KingSpeedTokenContract from '../contracts/KingSpeedTokenContract.json';\nimport StakingContract from '../contracts/KingSpeedStakingContac.json';\nimport { ethers } from \"ethers\";\nimport AlertHashTransactioon from '../components/AlertHashTransation';\nimport { notification } from \"../utils/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UNLIMITED_KSC = 200000000;\nconst PACKAGE_SILVER = 1;\nconst PACKAGE_GOLD = 2;\nconst PACKAGE_RUBY = 3;\nconst PACKAGE_DIAMOND = 4;\nconst OPTION_7_DAYS = 1;\nconst OPTION_30_DAYS = 2;\nconst OPTION_90_DAYS = 3;\nconst OPTION_180_DAYS = 4;\nconst URL_BUY_KSC = 'https://pancakeswap.finance/swap?outputCurrency=0x3ac0f8cecc1fb0ee6c2017a072d52e85b00c6694';\nexport default function StakeDetail(_ref) {\n  _s();\n\n  let {\n    option,\n    packageItem\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const {\n    balanceKSC,\n    totalStakedAmount,\n    web3,\n    walletAddress,\n    isLoading\n  } = useAppSelector(selectAccount);\n  const [transactionInfo, setTransactionInfo] = useState({\n    transactionHash: '',\n    status: false\n  });\n  const [allowanceAmount, setAllowanceAmount] = useState(0);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [disableConfirm, setDisableConfirm] = useState(false);\n  const [stakeAmount, setStakeAmount] = useState(packageItem.minStake);\n  const [stakeDate, setStakeDate] = useState(new Date());\n  const [totalStakedByOption, setTotalStakedByOption] = useState(0);\n  const poolLimit = (option === null || option === void 0 ? void 0 : option.poolLimit) === UNLIMITED_KSC ? 'Unlimited' : `${numberFormat(option === null || option === void 0 ? void 0 : option.poolLimit)} KSC`;\n  const percentPool = (option === null || option === void 0 ? void 0 : option.poolLimit) !== UNLIMITED_KSC ? totalStakedByOption / (option === null || option === void 0 ? void 0 : option.poolLimit) * 100 : 0;\n  useInterval(() => {\n    setStakeDate(new Date());\n  }, 1000);\n\n  const getAllowanceAmount = async () => {\n    try {\n      const kingSpeedContract = new web3.eth.Contract(KingSpeedTokenContract.abi, process.env.REACT_APP_KING_SPEED_TOKEN_CONTRACT);\n      await kingSpeedContract.methods.allowance(walletAddress, process.env.REACT_APP_STAKING_CONTRACT).call((err, res) => {\n        if (err) {\n          notification(\"Get amount allowance fail\", \"error\");\n          return;\n        }\n\n        if (res) {\n          setAllowanceAmount(Number(ethers.utils.formatUnits(res, 18)));\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (walletAddress) {\n      getAllowanceAmount();\n    }\n  }, [walletAddress]);\n\n  const handleStakeAmount = values => {\n    const {\n      value\n    } = values;\n    setStakeAmount(value ? parseFloat(value) : 0);\n    setErrorMessage('');\n    setDisableConfirm(false);\n\n    if (parseFloat(value) > packageItem.maxStake) {\n      setDisableConfirm(true);\n      setErrorMessage(`The stake amount can not be higher than ${numberFormat(packageItem.maxStake)} maximum KSC of ${packageItem.name} package`);\n      return;\n    }\n\n    if (parseFloat(value) > balanceKSC) {\n      setDisableConfirm(true);\n      setErrorMessage('The stake amount can not be higher than the available amount');\n      return;\n    }\n\n    if (parseFloat(value) < packageItem.minStake) {\n      setDisableConfirm(true);\n      setErrorMessage(`The stake amount can not be lower than ${numberFormat(packageItem.minStake)} KSC`);\n      return;\n    }\n  };\n\n  const handleMaxKSC = () => {\n    if (balanceKSC >= packageItem.maxStake) {\n      setStakeAmount(packageItem.maxStake);\n    } else {\n      setStakeAmount(balanceKSC);\n    }\n  };\n\n  const approve = async () => {\n    if (balanceKSC < packageItem.minStake) {\n      notification(\"Your KSC balance is insufficient to approve \", \"error\");\n      return;\n    }\n\n    try {\n      const kingSpeedContract = new web3.eth.Contract(KingSpeedTokenContract.abi, process.env.REACT_APP_KING_SPEED_TOKEN_CONTRACT);\n      await kingSpeedContract.methods.approve(process.env.REACT_APP_STAKING_CONTRACT, web3.utils.toWei(balanceKSC.toString(), 'ether')).send({\n        from: walletAddress\n      }).on('receipt', receipt => {\n        if (receipt.status) {\n          setTransactionInfo({\n            transactionHash: receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash,\n            status: true\n          });\n          notification(\"An Approve has been successfully\", \"success\");\n        } else {\n          if (receipt !== null && receipt !== void 0 && receipt.transactionHash) {\n            setTransactionInfo({\n              transactionHash: receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash,\n              status: false\n            });\n          }\n\n          notification(\"An approval has failed\", \"error\");\n        }\n      }).on('error', (error, receipt) => {\n        if (receipt !== null && receipt !== void 0 && receipt.transactionHash) {\n          setTransactionInfo({\n            transactionHash: receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash,\n            status: false\n          });\n        }\n\n        notification(\"An approval has failed\", \"error\");\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateData = stakeAmount => {\n    notification('Congratulation, you have staked successfully', 'success');\n    setStakeAmount(packageItem.minStake);\n    dispatch(setBalanceKSC(balanceKSC - stakeAmount));\n    dispatch(setTotalStakedAmount(totalStakedAmount + stakeAmount));\n    dispatch(setIsLoading(false));\n  };\n\n  const deposit = async () => {\n    const stakingContract = new web3.eth.Contract(StakingContract.abi, process.env.REACT_APP_STAKING_CONTRACT);\n\n    if (option.id === OPTION_7_DAYS) {\n      await stakingContract.methods.oneWeekStake(web3.utils.toWei(stakeAmount.toString(), 'ether')).send({\n        from: walletAddress\n      }).on('receipt', async receipt => {\n        if (receipt.status) {\n          setTransactionInfo({\n            transactionHash: receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash,\n            status: true\n          });\n          getAllowanceAmount();\n          updateData(stakeAmount);\n        } else {\n          if (receipt !== null && receipt !== void 0 && receipt.transactionHash) {\n            setTransactionInfo({\n              transactionHash: receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash,\n              status: false\n            });\n          }\n\n          notification(\"The transaction is failed\", \"error\");\n        }\n      }).on('error', function (error, receipt) {\n        if (receipt !== null && receipt !== void 0 && receipt.transactionHash) {\n          setTransactionInfo({\n            transactionHash: receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash,\n            status: false\n          });\n        }\n\n        notification('The transaction is failed', 'error');\n      });\n    }\n\n    if (option.id === OPTION_30_DAYS) {\n      await stakingContract.methods.oneMonthStake(web3.utils.toWei(stakeAmount.toString(), 'ether')).send({\n        from: walletAddress\n      }).on('receipt', async receipt => {\n        if (receipt.status) {\n          setTransactionInfo({\n            transactionHash: receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash,\n            status: true\n          });\n          getAllowanceAmount();\n          updateData(stakeAmount);\n        } else {\n          if (receipt !== null && receipt !== void 0 && receipt.transactionHash) {\n            setTransactionInfo({\n              transactionHash: receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash,\n              status: false\n            });\n          }\n\n          notification(\"The transaction is failed\", \"error\");\n        }\n      }).on('error', function (error, receipt) {\n        if (receipt !== null && receipt !== void 0 && receipt.transactionHash) {\n          setTransactionInfo({\n            transactionHash: receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash,\n            status: false\n          });\n        }\n\n        notification('The transaction is failed', 'error');\n      });\n    }\n\n    if (option.id === OPTION_90_DAYS) {\n      await stakingContract.methods.threeMonthStake(web3.utils.toWei(stakeAmount.toString(), 'ether')).send({\n        from: walletAddress\n      }).on('receipt', async receipt => {\n        if (receipt.status) {\n          setTransactionInfo({\n            transactionHash: receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash,\n            status: true\n          });\n          getAllowanceAmount();\n          updateData(stakeAmount);\n        } else {\n          if (receipt !== null && receipt !== void 0 && receipt.transactionHash) {\n            setTransactionInfo({\n              transactionHash: receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash,\n              status: false\n            });\n          }\n\n          notification(\"The transaction is failed\", \"error\");\n        }\n      }).on('error', function (error, receipt) {\n        if (receipt !== null && receipt !== void 0 && receipt.transactionHash) {\n          setTransactionInfo({\n            transactionHash: receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash,\n            status: false\n          });\n        }\n\n        notification('The transaction is failed', 'error');\n      });\n    }\n\n    if (option.id === OPTION_180_DAYS) {\n      await stakingContract.methods.sixMonthStake(web3.utils.toWei(stakeAmount.toString(), 'ether')).send({\n        from: walletAddress\n      }).on('receipt', async receipt => {\n        if (receipt.status) {\n          setTransactionInfo({\n            transactionHash: receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash,\n            status: true\n          });\n          getAllowanceAmount();\n          updateData(stakeAmount);\n        } else {\n          if (receipt !== null && receipt !== void 0 && receipt.transactionHash) {\n            setTransactionInfo({\n              transactionHash: receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash,\n              status: false\n            });\n          }\n\n          notification(\"The transaction is failed\", \"error\");\n        }\n      }).on('error', function (error, receipt) {\n        if (receipt !== null && receipt !== void 0 && receipt.transactionHash) {\n          setTransactionInfo({\n            transactionHash: receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash,\n            status: false\n          });\n        }\n\n        notification('The transaction is failed', 'error');\n      });\n    }\n  };\n\n  const formatDataStaked = amount => {\n    var _Number;\n\n    return (_Number = Number(ethers.utils.formatUnits(amount, 18))) !== null && _Number !== void 0 ? _Number : 0;\n  };\n\n  useEffect(() => {\n    getDetailStakedPool();\n    closeTransactionHash();\n  }, [packageItem, option]);\n\n  const getDetailStakedPool = async () => {\n    const stakingContract = new web3.eth.Contract(StakingContract.abi, process.env.REACT_APP_STAKING_CONTRACT);\n    await stakingContract.methods.getDetailStakedPool().call((err, res) => {\n      if (err) {\n        console.log(err);\n        return;\n      }\n\n      const adjacencyMatrix = res;\n\n      if (option.id === OPTION_7_DAYS) {\n        const option7Days = adjacencyMatrix[0];\n\n        if (packageItem.id === PACKAGE_SILVER) {\n          setTotalStakedByOption(formatDataStaked(option7Days[0]));\n        }\n\n        if (packageItem.id === PACKAGE_GOLD) {\n          setTotalStakedByOption(formatDataStaked(option7Days[1]));\n        }\n\n        if (packageItem.id === PACKAGE_RUBY) {\n          setTotalStakedByOption(formatDataStaked(option7Days[2]));\n        }\n\n        if (packageItem.id === PACKAGE_DIAMOND) {\n          setTotalStakedByOption(formatDataStaked(option7Days[3]));\n        }\n      }\n\n      if (option.id === OPTION_30_DAYS) {\n        const option30Days = adjacencyMatrix[1];\n\n        if (packageItem.id === PACKAGE_SILVER) {\n          setTotalStakedByOption(formatDataStaked(option30Days[0]));\n        }\n\n        if (packageItem.id === PACKAGE_GOLD) {\n          setTotalStakedByOption(formatDataStaked(option30Days[1]));\n        }\n\n        if (packageItem.id === PACKAGE_RUBY) {\n          setTotalStakedByOption(formatDataStaked(option30Days[2]));\n        }\n\n        if (packageItem.id === PACKAGE_DIAMOND) {\n          setTotalStakedByOption(formatDataStaked(option30Days[3]));\n        }\n      }\n\n      if (option.id === OPTION_90_DAYS) {\n        const option90Days = adjacencyMatrix[2];\n\n        if (packageItem.id === PACKAGE_SILVER) {\n          setTotalStakedByOption(formatDataStaked(option90Days[0]));\n        }\n\n        if (packageItem.id === PACKAGE_GOLD) {\n          setTotalStakedByOption(formatDataStaked(option90Days[1]));\n        }\n\n        if (packageItem.id === PACKAGE_RUBY) {\n          setTotalStakedByOption(formatDataStaked(option90Days[2]));\n        }\n\n        if (packageItem.id === PACKAGE_DIAMOND) {\n          setTotalStakedByOption(formatDataStaked(option90Days[3]));\n        }\n      }\n\n      if (option.id === OPTION_180_DAYS) {\n        const option180Days = adjacencyMatrix[3];\n\n        if (packageItem.id === PACKAGE_SILVER) {\n          setTotalStakedByOption(formatDataStaked(option180Days[0]));\n        }\n\n        if (packageItem.id === PACKAGE_GOLD) {\n          setTotalStakedByOption(formatDataStaked(option180Days[1]));\n        }\n\n        if (packageItem.id === PACKAGE_RUBY) {\n          setTotalStakedByOption(formatDataStaked(option180Days[2]));\n        }\n\n        if (packageItem.id === PACKAGE_DIAMOND) {\n          setTotalStakedByOption(formatDataStaked(option180Days[3]));\n        }\n      }\n    });\n  };\n\n  const isCheckApprove = () => {\n    return allowanceAmount < stakeAmount;\n  };\n\n  const handleConfirmStake = async () => {\n    dispatch(setIsLoading(true));\n\n    try {\n      if (isCheckApprove()) {\n        await approve();\n      }\n\n      await deposit();\n    } catch (error) {\n      dispatch(setIsLoading(false));\n    }\n  };\n\n  const calculateRate = () => {\n    return option.rate * option.duration * stakeAmount / (365 * 100);\n  };\n\n  const isDisable = () => {\n    return balanceKSC < packageItem.minStake || totalStakedByOption > option.poolLimit;\n  };\n\n  const closeTransactionHash = () => {\n    setTransactionInfo({\n      transactionHash: '',\n      status: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    padding: \"20px 0\",\n    maxW: \"670px\",\n    margin: \"0 auto\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      padding: \"10px 20px\",\n      borderStyle: \"solid\",\n      borderWidth: \"0.6px\",\n      borderRadius: \"5px\",\n      background: \"linear-gradient(to left, rgba(3, 170, 20, 0.46), rgba(0, 174, 214, 0.12))\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          fontSize: \"12px\",\n          fontWeight: \"600\",\n          children: \"Total Staked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: \"6px\",\n          fontSize: \"20px\",\n          color: \"#ffab00\",\n          fontWeight: \"700\",\n          children: [numberFormat(totalStakedByOption), \" KSC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"right\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          color: \"#8d9fb9\",\n          fontSize: \"12px\",\n          fontWeight: \"600\",\n          textTransform: \"uppercase\",\n          children: \"Pool Limit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          w: \"200px\",\n          display: \"flex\",\n          justifyContent: (option === null || option === void 0 ? void 0 : option.poolLimit) === UNLIMITED_KSC ? 'flex-end' : 'space-between',\n          fontSize: \"16px\",\n          fontWeight: \"600\",\n          mt: \"5px\",\n          children: [(option === null || option === void 0 ? void 0 : option.poolLimit) !== UNLIMITED_KSC && /*#__PURE__*/_jsxDEV(Box, {\n            children: [percentPool === null || percentPool === void 0 ? void 0 : percentPool.toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"amount\",\n            children: poolLimit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 21\n        }, this), (option === null || option === void 0 ? void 0 : option.poolLimit) !== UNLIMITED_KSC && /*#__PURE__*/_jsxDEV(Box, {\n          fontSize: \"21px\",\n          lineHeight: \"33px\",\n          textTransform: \"uppercase\",\n          borderRadius: \"2px\",\n          flex: \"1\",\n          mt: \"10px\",\n          borderBottom: \"7px solid rgb(0, 174, 214, 0.16)\",\n          className: \"progress\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            w: percentPool,\n            borderRadius: \"3px\",\n            borderBottom: \"7px solid #ffffff\",\n            mb: \"-7px\",\n            className: \"progress-detail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: 2,\n      spacing: 16,\n      mt: \"20px\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          justify: \"space-between\",\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            fontSize: \"22px\",\n            fontWeight: \"700\",\n            color: \"#c3fb12\",\n            children: \"STAKE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: URL_BUY_KSC,\n            isExternal: true,\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              align: \"center\",\n              justify: \"flex-end\",\n              cursor: \"pointer\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                color: \"#21c186\",\n                fontSize: \"14px\",\n                mt: \"3px\",\n                fontWeight: \"700\",\n                mr: \"10px\",\n                children: \"Buy KSC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Image, {\n                src: \"./icon/icon-buy.svg\",\n                alt: \"icon-buy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justify: \"space-between\",\n          alignItems: \"center\",\n          mt: \"10px\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            fontSize: \"14px\",\n            children: \"Stake amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            fontSize: \"14px\",\n            children: [\"Available amount: \", numberFormat(balanceKSC), \" KSC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          border: balanceKSC < packageItem.minStake || disableConfirm ? '1px solid #ee2737' : '1px solid #003947',\n          borderRadius: 4,\n          mt: \"5px\",\n          p: \"5px 10px\",\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            justify: \"space-between\",\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(NumberFormat, {\n              style: {\n                backgroundColor: '#000000'\n              },\n              value: stakeAmount,\n              min: packageItem.minStake,\n              max: packageItem.maxStake,\n              thousandSeparator: true,\n              decimalScale: 4,\n              allowNegative: false,\n              disabled: isLoading || isDisable(),\n              onValueChange: values => handleStakeAmount(values)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              justify: \"center\",\n              align: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                as: \"span\",\n                fontWeight: \"600\",\n                fontSize: \"20px\",\n                children: \"KSC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                padding: \"5px 10px\",\n                fontWeight: \"600\",\n                fontSize: \"16px\",\n                color: \"#21c186\",\n                background: \"rgba(33, 193, 134, 0.19)\",\n                borderRadius: \"5px\",\n                cursor: \"pointer\",\n                ml: 4,\n                onClick: handleMaxKSC,\n                children: \"Max\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 21\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(Box, {\n          color: \"#ee2737\",\n          fontSize: \"13px\",\n          mt: \"10px\",\n          fontWeight: \"600\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 25\n        }, this), balanceKSC < packageItem.minStake && /*#__PURE__*/_jsxDEV(Box, {\n          color: \"#ee2737\",\n          fontSize: \"13px\",\n          mt: \"10px\",\n          fontWeight: \"600\",\n          children: `The available amount can not be lower than ${numberFormat(packageItem.minStake)} KSC`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 25\n        }, this), transactionInfo.transactionHash && /*#__PURE__*/_jsxDEV(Box, {\n          mt: \"10px\",\n          children: /*#__PURE__*/_jsxDEV(AlertHashTransactioon, {\n            transactionInfo: transactionInfo,\n            closeTransactionHash: closeTransactionHash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"stake-info\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          fontSize: \"18px\",\n          fontWeight: \"600\",\n          children: \"SUMMARY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          justify: \"space-between\",\n          mt: \"5px\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            fontSize: \"16px\",\n            children: \"Stake Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            fontSize: \"16px\",\n            children: formatDateYYYYMMDDHHMMSS(stakeDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          justify: \"space-between\",\n          mt: \"5px\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            fontSize: \"16px\",\n            children: \"Interest End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            fontSize: \"16px\",\n            children: formatDateYYYYMMDDHHMMSS(dayjs(stakeDate).add(option.duration, 'day'))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          justify: \"space-between\",\n          mt: \"5px\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            fontSize: \"16px\",\n            children: \"Withdrawal Delay Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            fontSize: \"16px\",\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          border: \"1px solid rgba(0, 174, 214, 0.33)\",\n          mt: \"10px\",\n          mb: \"10px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          justify: \"space-between\",\n          mt: \"5px\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            fontSize: \"16px\",\n            fontWeight: \"700\",\n            color: \"white\",\n            children: \"APY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            fontSize: \"16px\",\n            fontWeight: \"700\",\n            color: \"white\",\n            children: [option.rateDisplay, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          justify: \"space-between\",\n          mt: \"5px\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            fontSize: \"16px\",\n            fontWeight: \"700\",\n            color: \"white\",\n            children: \"Estimated Interests\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            fontSize: \"16px\",\n            fontWeight: \"700\",\n            color: \"white\",\n            children: [calculateRate().toFixed(3), \" KSC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmStake,\n          color: \"#000000\",\n          fontWeight: \"700\",\n          background: \"#ffab00\",\n          mt: \"10px\",\n          isLoading: isLoading,\n          disabled: isDisable() || disableConfirm || isLoading,\n          loadingText: \"Loading\",\n          fontSize: \"20px\",\n          p: \"20px 100px\",\n          w: \"100%\",\n          _hover: {\n            color: '#000000',\n            background: '#ffab00'\n          },\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 426,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StakeDetail, \"f1/ieVtw3Zzy6h3/x5jiy0RKlEc=\", false, function () {\n  return [useAppDispatch, useAppSelector, useInterval];\n});\n\n_c = StakeDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakeDetail\");","map":{"version":3,"sources":["D:/visuacode/code-kingspeed/kingspeed/src/features/StakeDetail.tsx"],"names":["React","useEffect","useState","Box","Flex","Link","Image","SimpleGrid","Button","numberFormat","formatDateYYYYMMDDHHMMSS","dayjs","NumberFormat","useInterval","useAppDispatch","useAppSelector","selectAccount","setBalanceKSC","setIsLoading","setTotalStakedAmount","KingSpeedTokenContract","StakingContract","ethers","AlertHashTransactioon","notification","UNLIMITED_KSC","PACKAGE_SILVER","PACKAGE_GOLD","PACKAGE_RUBY","PACKAGE_DIAMOND","OPTION_7_DAYS","OPTION_30_DAYS","OPTION_90_DAYS","OPTION_180_DAYS","URL_BUY_KSC","StakeDetail","option","packageItem","dispatch","balanceKSC","totalStakedAmount","web3","walletAddress","isLoading","transactionInfo","setTransactionInfo","transactionHash","status","allowanceAmount","setAllowanceAmount","errorMessage","setErrorMessage","disableConfirm","setDisableConfirm","stakeAmount","setStakeAmount","minStake","stakeDate","setStakeDate","Date","totalStakedByOption","setTotalStakedByOption","poolLimit","percentPool","getAllowanceAmount","kingSpeedContract","eth","Contract","abi","process","env","REACT_APP_KING_SPEED_TOKEN_CONTRACT","methods","allowance","REACT_APP_STAKING_CONTRACT","call","err","res","Number","utils","formatUnits","error","console","log","handleStakeAmount","values","value","parseFloat","maxStake","name","handleMaxKSC","approve","toWei","toString","send","from","on","receipt","updateData","deposit","stakingContract","id","oneWeekStake","oneMonthStake","threeMonthStake","sixMonthStake","formatDataStaked","amount","getDetailStakedPool","closeTransactionHash","adjacencyMatrix","option7Days","option30Days","option90Days","option180Days","isCheckApprove","handleConfirmStake","calculateRate","rate","duration","isDisable","toFixed","backgroundColor","add","rateDisplay","color","background"],"mappings":"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","sourcesContent":["import React, {useEffect, useState } from \"react\";\r\nimport { Box, Flex, Link, Image, SimpleGrid, Button } from '@chakra-ui/react'\r\nimport { numberFormat } from \"../utils/MathCommon\";\r\nimport { formatDateYYYYMMDDHHMMSS } from \"../utils/DateFormat\";\r\nimport dayjs from \"dayjs\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport useInterval  from '../hooks/userInterval'\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\r\nimport { selectAccount, setBalanceKSC, setIsLoading, setTotalStakedAmount } from \"../reducers\";\r\nimport { AbiItem } from 'web3-utils'\r\nimport KingSpeedTokenContract from '../contracts/KingSpeedTokenContract.json'\r\nimport StakingContract from '../contracts/KingSpeedStakingContac.json'\r\nimport { ethers } from \"ethers\";\r\nimport AlertHashTransactioon from '../components/AlertHashTransation'\r\nimport { notification } from \"../utils/Notification\";\r\n\r\nconst UNLIMITED_KSC = 200000000\r\nconst PACKAGE_SILVER = 1\r\nconst PACKAGE_GOLD = 2\r\nconst PACKAGE_RUBY = 3\r\nconst PACKAGE_DIAMOND = 4\r\nconst OPTION_7_DAYS = 1\r\nconst OPTION_30_DAYS = 2\r\nconst OPTION_90_DAYS = 3\r\nconst OPTION_180_DAYS = 4\r\n\r\nconst URL_BUY_KSC =\r\n    'https://pancakeswap.finance/swap?outputCurrency=0x3ac0f8cecc1fb0ee6c2017a072d52e85b00c6694'\r\n\r\nexport default function StakeDetail({ option, packageItem }: any) {\r\n    const dispatch = useAppDispatch()\r\n    const { balanceKSC, totalStakedAmount, web3, walletAddress, isLoading } =\r\n        useAppSelector(selectAccount)\r\n\r\n    const [transactionInfo, setTransactionInfo] = useState({\r\n        transactionHash: '',\r\n        status: false,\r\n    })\r\n    const [allowanceAmount, setAllowanceAmount] = useState(0)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [disableConfirm, setDisableConfirm] = useState(false)\r\n\r\n    const [stakeAmount, setStakeAmount] = useState(packageItem.minStake)\r\n    const [stakeDate, setStakeDate] = useState(new Date())\r\n    const [totalStakedByOption, setTotalStakedByOption] = useState(0)\r\n\r\n    const poolLimit =\r\n        option?.poolLimit === UNLIMITED_KSC ? 'Unlimited' : `${numberFormat(option?.poolLimit)} KSC`\r\n\r\n    const percentPool =\r\n        option?.poolLimit !== UNLIMITED_KSC ? (totalStakedByOption / option?.poolLimit) * 100 : 0\r\n\r\n    useInterval(() => {\r\n        setStakeDate(new Date())\r\n    }, 1000)\r\n\r\n    const getAllowanceAmount = async () => {\r\n        try {\r\n            const kingSpeedContract = new web3.eth.Contract(\r\n                KingSpeedTokenContract.abi as AbiItem[],\r\n                process.env.REACT_APP_KING_SPEED_TOKEN_CONTRACT\r\n            )\r\n\r\n            await kingSpeedContract.methods.allowance(walletAddress, process.env.REACT_APP_STAKING_CONTRACT)\r\n                .call((err: any, res: any) => {\r\n                    if (err) {\r\n                        notification(\"Get amount allowance fail\", \"error\")\r\n                        return\r\n                    }\r\n                    if (res) {\r\n                        setAllowanceAmount(Number(ethers.utils.formatUnits(res, 18)))\r\n                    }\r\n                })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (walletAddress) {\r\n            getAllowanceAmount()\r\n        }\r\n    }, [walletAddress])\r\n\r\n    const handleStakeAmount = (values: any) => {\r\n        const { value } = values\r\n        setStakeAmount(value ? parseFloat(value) : 0)\r\n\r\n        setErrorMessage('')\r\n        setDisableConfirm(false)\r\n\r\n        if (parseFloat(value) > packageItem.maxStake) {\r\n            setDisableConfirm(true)\r\n            setErrorMessage(\r\n                `The stake amount can not be higher than ${numberFormat(\r\n                    packageItem.maxStake\r\n                )} maximum KSC of ${packageItem.name} package`\r\n            )\r\n            return\r\n        }\r\n\r\n        if (parseFloat(value) > balanceKSC) {\r\n            setDisableConfirm(true)\r\n            setErrorMessage('The stake amount can not be higher than the available amount')\r\n            return\r\n        }\r\n\r\n        if (parseFloat(value) < packageItem.minStake) {\r\n            setDisableConfirm(true)\r\n            setErrorMessage(\r\n                `The stake amount can not be lower than ${numberFormat(\r\n                    packageItem.minStake\r\n                )} KSC`\r\n            )\r\n            return\r\n        }\r\n    }\r\n\r\n    const handleMaxKSC = () => {\r\n        if (balanceKSC >= packageItem.maxStake) {\r\n            setStakeAmount(packageItem.maxStake)\r\n        } else {\r\n            setStakeAmount(balanceKSC)\r\n        }\r\n    }\r\n\r\n    const approve = async () => {\r\n        if (balanceKSC < packageItem.minStake) {\r\n            notification(\"Your KSC balance is insufficient to approve \", \"error\")\r\n            return\r\n        }\r\n\r\n        try {\r\n            const kingSpeedContract = new web3.eth.Contract(\r\n                KingSpeedTokenContract.abi as AbiItem[],\r\n                process.env.REACT_APP_KING_SPEED_TOKEN_CONTRACT\r\n            )\r\n\r\n            await kingSpeedContract.methods\r\n                .approve(\r\n                    process.env.REACT_APP_STAKING_CONTRACT,\r\n                    web3.utils.toWei(balanceKSC.toString(), 'ether')\r\n                )\r\n                .send({\r\n                    from: walletAddress,\r\n                }).on('receipt', (receipt: any) => {\r\n                    if (receipt.status) {\r\n                        setTransactionInfo({ transactionHash: receipt?.transactionHash, status: true })\r\n                        notification(\"An Approve has been successfully\", \"success\")\r\n                    } else {\r\n                        if (receipt?.transactionHash) {\r\n                            setTransactionInfo({ transactionHash: receipt?.transactionHash, status: false })\r\n                        }\r\n                        notification(\"An approval has failed\", \"error\")\r\n                    }\r\n                })\r\n                .on('error', (error: any, receipt: any) => {\r\n                    if (receipt?.transactionHash) {\r\n                        setTransactionInfo({ transactionHash: receipt?.transactionHash, status: false })\r\n                    }\r\n                    notification(\"An approval has failed\", \"error\")\r\n                })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const updateData = (stakeAmount: number) => {\r\n        notification('Congratulation, you have staked successfully', 'success')\r\n        setStakeAmount(packageItem.minStake)\r\n        dispatch(setBalanceKSC(balanceKSC - stakeAmount))\r\n        dispatch(setTotalStakedAmount(totalStakedAmount + stakeAmount))\r\n        dispatch(setIsLoading(false))\r\n    }\r\n\r\n    const deposit = async () => {\r\n        const stakingContract = new web3.eth.Contract(\r\n            StakingContract.abi as AbiItem[],\r\n            process.env.REACT_APP_STAKING_CONTRACT\r\n        )\r\n\r\n        if (option.id === OPTION_7_DAYS) {\r\n            await stakingContract.methods\r\n                .oneWeekStake(web3.utils.toWei(stakeAmount.toString(), 'ether'))\r\n                .send({ from: walletAddress })\r\n                .on('receipt', async (receipt: any) => {\r\n                    if (receipt.status) {\r\n                        setTransactionInfo({\r\n                            transactionHash: receipt?.transactionHash,\r\n                            status: true,\r\n                        })\r\n                        getAllowanceAmount()\r\n                        updateData(stakeAmount)\r\n                    } else {\r\n                        if (receipt?.transactionHash) {\r\n                            setTransactionInfo({ transactionHash: receipt?.transactionHash, status: false })\r\n                        }\r\n                        notification(\"The transaction is failed\", \"error\")\r\n                    }\r\n                })\r\n                .on('error', function (error: any, receipt: any) {\r\n                    if (receipt?.transactionHash) {\r\n                        setTransactionInfo({ transactionHash: receipt?.transactionHash, status: false })\r\n                    }\r\n                    notification('The transaction is failed', 'error')\r\n                })\r\n        }\r\n\r\n        if (option.id === OPTION_30_DAYS) {\r\n            await stakingContract.methods\r\n                .oneMonthStake(web3.utils.toWei(stakeAmount.toString(), 'ether'))\r\n                .send({ from: walletAddress })\r\n                .on('receipt', async (receipt: any) => {\r\n                    if (receipt.status) {\r\n                        setTransactionInfo({\r\n                            transactionHash: receipt?.transactionHash,\r\n                            status: true,\r\n                        })\r\n                        getAllowanceAmount()\r\n                        updateData(stakeAmount)\r\n                    } else {\r\n                        if (receipt?.transactionHash) {\r\n                            setTransactionInfo({ transactionHash: receipt?.transactionHash, status: false })\r\n                        }\r\n                        notification(\"The transaction is failed\", \"error\")\r\n                    }\r\n                })\r\n                .on('error', function (error: any, receipt: any) {\r\n                    if (receipt?.transactionHash) {\r\n                        setTransactionInfo({ transactionHash: receipt?.transactionHash, status: false })\r\n                    }\r\n                    notification('The transaction is failed', 'error')\r\n                })\r\n        }\r\n\r\n        if (option.id === OPTION_90_DAYS) {\r\n            await stakingContract.methods\r\n                .threeMonthStake(web3.utils.toWei(stakeAmount.toString(), 'ether'))\r\n                .send({ from: walletAddress })\r\n                .on('receipt', async (receipt: any) => {\r\n                    if (receipt.status) {\r\n                        setTransactionInfo({\r\n                            transactionHash: receipt?.transactionHash,\r\n                            status: true,\r\n                        })\r\n                        getAllowanceAmount()\r\n                        updateData(stakeAmount)\r\n                    } else {\r\n                        if (receipt?.transactionHash) {\r\n                            setTransactionInfo({ transactionHash: receipt?.transactionHash, status: false })\r\n                        }\r\n                        notification(\"The transaction is failed\", \"error\")\r\n                    }\r\n                })\r\n                .on('error', function (error: any, receipt: any) {\r\n                    if (receipt?.transactionHash) {\r\n                        setTransactionInfo({ transactionHash: receipt?.transactionHash, status: false })\r\n                    }\r\n                    notification('The transaction is failed', 'error')\r\n                })\r\n        }\r\n\r\n        if (option.id === OPTION_180_DAYS) {\r\n            await stakingContract.methods\r\n                .sixMonthStake(web3.utils.toWei(stakeAmount.toString(), 'ether'))\r\n                .send({ from: walletAddress })\r\n                .on('receipt', async (receipt: any) => {\r\n                    if (receipt.status) {\r\n                        setTransactionInfo({\r\n                            transactionHash: receipt?.transactionHash,\r\n                            status: true,\r\n                        })\r\n                        getAllowanceAmount()\r\n                        updateData(stakeAmount)\r\n                    } else {\r\n                        if (receipt?.transactionHash) {\r\n                            setTransactionInfo({ transactionHash: receipt?.transactionHash, status: false })\r\n                        }\r\n                        notification(\"The transaction is failed\", \"error\")\r\n                    }\r\n                })\r\n                .on('error', function (error: any, receipt: any) {\r\n                    if (receipt?.transactionHash) {\r\n                        setTransactionInfo({ transactionHash: receipt?.transactionHash, status: false })\r\n                    }\r\n                    notification('The transaction is failed', 'error')\r\n                })\r\n        }\r\n    }\r\n\r\n    const formatDataStaked = (amount: string) => {\r\n        return Number(ethers.utils.formatUnits(amount, 18)) ?? 0\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDetailStakedPool()\r\n        closeTransactionHash()\r\n    }, [packageItem, option])\r\n\r\n    const getDetailStakedPool = async () => {\r\n        const stakingContract = new web3.eth.Contract(\r\n            StakingContract.abi as AbiItem[],\r\n            process.env.REACT_APP_STAKING_CONTRACT\r\n        )\r\n        await stakingContract.methods.getDetailStakedPool().call((err: any, res: any) => {\r\n            if (err) {\r\n                console.log(err)\r\n                return\r\n            }\r\n            const adjacencyMatrix = res\r\n\r\n            if (option.id === OPTION_7_DAYS) {\r\n                const option7Days = adjacencyMatrix[0]\r\n\r\n                if (packageItem.id === PACKAGE_SILVER) {\r\n                    setTotalStakedByOption(formatDataStaked(option7Days[0]))\r\n                }\r\n\r\n                if (packageItem.id === PACKAGE_GOLD) {\r\n                    setTotalStakedByOption(formatDataStaked(option7Days[1]))\r\n                }\r\n\r\n                if (packageItem.id === PACKAGE_RUBY) {\r\n                    setTotalStakedByOption(formatDataStaked(option7Days[2]))\r\n                }\r\n\r\n                if (packageItem.id === PACKAGE_DIAMOND) {\r\n                    setTotalStakedByOption(formatDataStaked(option7Days[3]))\r\n                }\r\n            }\r\n\r\n            if (option.id === OPTION_30_DAYS) {\r\n                const option30Days = adjacencyMatrix[1]\r\n\r\n                if (packageItem.id === PACKAGE_SILVER) {\r\n                    setTotalStakedByOption(formatDataStaked(option30Days[0]))\r\n                }\r\n\r\n                if (packageItem.id === PACKAGE_GOLD) {\r\n                    setTotalStakedByOption(formatDataStaked(option30Days[1]))\r\n                }\r\n\r\n                if (packageItem.id === PACKAGE_RUBY) {\r\n                    setTotalStakedByOption(formatDataStaked(option30Days[2]))\r\n                }\r\n\r\n                if (packageItem.id === PACKAGE_DIAMOND) {\r\n                    setTotalStakedByOption(formatDataStaked(option30Days[3]))\r\n                }\r\n            }\r\n\r\n            if (option.id === OPTION_90_DAYS) {\r\n                const option90Days = adjacencyMatrix[2]\r\n\r\n                if (packageItem.id === PACKAGE_SILVER) {\r\n                    setTotalStakedByOption(formatDataStaked(option90Days[0]))\r\n                }\r\n\r\n                if (packageItem.id === PACKAGE_GOLD) {\r\n                    setTotalStakedByOption(formatDataStaked(option90Days[1]))\r\n                }\r\n\r\n                if (packageItem.id === PACKAGE_RUBY) {\r\n                    setTotalStakedByOption(formatDataStaked(option90Days[2]))\r\n                }\r\n\r\n                if (packageItem.id === PACKAGE_DIAMOND) {\r\n                    setTotalStakedByOption(formatDataStaked(option90Days[3]))\r\n                }\r\n            }\r\n\r\n            if (option.id === OPTION_180_DAYS) {\r\n                const option180Days = adjacencyMatrix[3]\r\n\r\n                if (packageItem.id === PACKAGE_SILVER) {\r\n                    setTotalStakedByOption(formatDataStaked(option180Days[0]))\r\n                }\r\n\r\n                if (packageItem.id === PACKAGE_GOLD) {\r\n                    setTotalStakedByOption(formatDataStaked(option180Days[1]))\r\n                }\r\n\r\n                if (packageItem.id === PACKAGE_RUBY) {\r\n                    setTotalStakedByOption(formatDataStaked(option180Days[2]))\r\n                }\r\n\r\n                if (packageItem.id === PACKAGE_DIAMOND) {\r\n                    setTotalStakedByOption(formatDataStaked(option180Days[3]))\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const isCheckApprove = () => {\r\n        return allowanceAmount < stakeAmount\r\n    }\r\n\r\n    const handleConfirmStake = async () => {\r\n        dispatch(setIsLoading(true))\r\n        try {\r\n            if (isCheckApprove()) {\r\n                await approve()\r\n            }\r\n            await deposit()\r\n        } catch (error) {\r\n            dispatch(setIsLoading(false))\r\n        }\r\n    }\r\n\r\n    const calculateRate = () => {\r\n        return (option.rate * option.duration * stakeAmount) / (365 * 100)\r\n    }\r\n\r\n    const isDisable = () => {\r\n        return balanceKSC < packageItem.minStake || totalStakedByOption > option.poolLimit\r\n    }\r\n\r\n    const closeTransactionHash = () => {\r\n        setTransactionInfo({\r\n            transactionHash: '',\r\n            status: false,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box padding=\"20px 0\" maxW=\"670px\" margin=\"0 auto\">\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                padding=\"10px 20px\"\r\n                borderStyle=\"solid\"\r\n                borderWidth=\"0.6px\"\r\n                borderRadius=\"5px\"\r\n                background=\"linear-gradient(to left, rgba(3, 170, 20, 0.46), rgba(0, 174, 214, 0.12))\"\r\n            >\r\n                <Box>\r\n                    <Box fontSize=\"12px\" fontWeight=\"600\">\r\n                        Total Staked\r\n                    </Box>\r\n                    <Box mt=\"6px\" fontSize=\"20px\" color=\"#ffab00\" fontWeight=\"700\">\r\n                        {numberFormat(totalStakedByOption)} KSC\r\n                    </Box>\r\n                </Box>\r\n                <Box textAlign=\"right\">\r\n                    <Box color=\"#8d9fb9\" fontSize=\"12px\" fontWeight=\"600\" textTransform=\"uppercase\">\r\n                        Pool Limit\r\n                    </Box>\r\n                    <Box\r\n                        w=\"200px\"\r\n                        display=\"flex\"\r\n                        justifyContent={\r\n                            option?.poolLimit === UNLIMITED_KSC ? 'flex-end' : 'space-between'\r\n                        }\r\n                        fontSize=\"16px\"\r\n                        fontWeight=\"600\"\r\n                        mt=\"5px\"\r\n                    >\r\n                        {option?.poolLimit !== UNLIMITED_KSC && (\r\n                            <Box>{percentPool?.toFixed(2)}%</Box>\r\n                        )}\r\n                        <Box className=\"amount\">{poolLimit}</Box>\r\n                    </Box>\r\n                    {option?.poolLimit !== UNLIMITED_KSC && (\r\n                        <Box\r\n                            fontSize=\"21px\"\r\n                            lineHeight=\"33px\"\r\n                            textTransform=\"uppercase\"\r\n                            borderRadius=\"2px\"\r\n                            flex=\"1\"\r\n                            mt=\"10px\"\r\n                            borderBottom=\"7px solid rgb(0, 174, 214, 0.16)\"\r\n                            className=\"progress\"\r\n                        >\r\n                            <Box\r\n                                w={percentPool}\r\n                                borderRadius=\"3px\"\r\n                                borderBottom=\"7px solid #ffffff\"\r\n                                mb=\"-7px\"\r\n                                className=\"progress-detail\"\r\n                            ></Box>\r\n                        </Box>\r\n                    )}\r\n                </Box>\r\n            </Box>\r\n\r\n            <SimpleGrid columns={2} spacing={16} mt=\"20px\">\r\n                <Box>\r\n                    <Flex justify=\"space-between\" align=\"center\">\r\n                        <Box fontSize=\"22px\" fontWeight=\"700\" color=\"#c3fb12\">\r\n                            STAKE\r\n                        </Box>\r\n                        <Link href={URL_BUY_KSC} isExternal>\r\n                            <Flex align=\"center\" justify=\"flex-end\" cursor=\"pointer\">\r\n                                <Box\r\n                                    color=\"#21c186\"\r\n                                    fontSize=\"14px\"\r\n                                    mt=\"3px\"\r\n                                    fontWeight=\"700\"\r\n                                    mr=\"10px\"\r\n                                >\r\n                                    Buy KSC\r\n                                </Box>\r\n\r\n                                <Image src=\"./icon/icon-buy.svg\" alt=\"icon-buy\" />\r\n                            </Flex>\r\n                        </Link>\r\n                    </Flex>\r\n                    <Flex justify=\"space-between\" alignItems=\"center\" mt=\"10px\">\r\n                        <Box fontSize=\"14px\">Stake amount</Box>\r\n                        <Box fontSize=\"14px\">Available amount: {numberFormat(balanceKSC)} KSC</Box>\r\n                    </Flex>\r\n                    <Box\r\n                        border={\r\n                            balanceKSC < packageItem.minStake || disableConfirm\r\n                                ? '1px solid #ee2737'\r\n                                : '1px solid #003947'\r\n                        }\r\n                        borderRadius={4}\r\n                        mt=\"5px\"\r\n                        p=\"5px 10px\"\r\n                    >\r\n                        <Flex justify=\"space-between\" align=\"center\">\r\n                            <NumberFormat\r\n                                style={{\r\n                                    backgroundColor: '#000000',\r\n                                }}\r\n                                value={stakeAmount}\r\n                                min={packageItem.minStake}\r\n                                max={packageItem.maxStake}\r\n                                thousandSeparator={true}\r\n                                decimalScale={4}\r\n                                allowNegative={false}\r\n                                disabled={isLoading || isDisable()}\r\n                                onValueChange={(values) => handleStakeAmount(values)}\r\n                            />\r\n                            <Flex justify=\"center\" align=\"center\">\r\n                                <Box as=\"span\" fontWeight=\"600\" fontSize=\"20px\">\r\n                                    KSC\r\n                                </Box>\r\n                                <Box\r\n                                    padding=\"5px 10px\"\r\n                                    fontWeight=\"600\"\r\n                                    fontSize=\"16px\"\r\n                                    color=\"#21c186\"\r\n                                    background=\"rgba(33, 193, 134, 0.19)\"\r\n                                    borderRadius=\"5px\"\r\n                                    cursor=\"pointer\"\r\n                                    ml={4}\r\n                                    onClick={handleMaxKSC}\r\n                                >\r\n                                    Max\r\n                                </Box>\r\n                            </Flex>\r\n                        </Flex>\r\n                    </Box>\r\n\r\n                    {errorMessage && (\r\n                        <Box color=\"#ee2737\" fontSize=\"13px\" mt=\"10px\" fontWeight=\"600\">\r\n                            {errorMessage}\r\n                        </Box>\r\n                    )}\r\n\r\n                    {balanceKSC < packageItem.minStake && (\r\n                        <Box color=\"#ee2737\" fontSize=\"13px\" mt=\"10px\" fontWeight=\"600\">\r\n                            {`The available amount can not be lower than ${numberFormat(\r\n                                packageItem.minStake\r\n                            )} KSC`}\r\n                        </Box>\r\n                    )}\r\n\r\n                    {transactionInfo.transactionHash && (\r\n                        <Box mt=\"10px\">\r\n                            <AlertHashTransactioon\r\n                                transactionInfo={transactionInfo}\r\n                                closeTransactionHash={closeTransactionHash}\r\n                            />\r\n                        </Box>\r\n                    )}\r\n                </Box>\r\n                <Box className=\"stake-info\">\r\n                    <Box fontSize=\"18px\" fontWeight=\"600\">\r\n                        SUMMARY\r\n                    </Box>\r\n                    <Flex alignItems=\"center\" justify=\"space-between\" mt=\"5px\">\r\n                        <Box fontSize=\"16px\">Stake Date</Box>\r\n                        <Box fontSize=\"16px\">{formatDateYYYYMMDDHHMMSS(stakeDate)}</Box>\r\n                    </Flex>\r\n                    <Flex alignItems=\"center\" justify=\"space-between\" mt=\"5px\">\r\n                        <Box fontSize=\"16px\">Interest End Date</Box>\r\n                        <Box fontSize=\"16px\">\r\n                            {formatDateYYYYMMDDHHMMSS(dayjs(stakeDate).add(option.duration, 'day'))}\r\n                        </Box>\r\n                    </Flex>\r\n                    <Flex alignItems=\"center\" justify=\"space-between\" mt=\"5px\">\r\n                        <Box fontSize=\"16px\">Withdrawal Delay Time</Box>\r\n                        <Box fontSize=\"16px\">None</Box>\r\n                    </Flex>\r\n\r\n                    <Box border=\"1px solid rgba(0, 174, 214, 0.33)\" mt=\"10px\" mb=\"10px\"></Box>\r\n\r\n                    <Flex alignItems=\"center\" justify=\"space-between\" mt=\"5px\">\r\n                        <Box fontSize=\"16px\" fontWeight=\"700\" color=\"white\">\r\n                            APY\r\n                        </Box>\r\n                        <Box fontSize=\"16px\" fontWeight=\"700\" color=\"white\">\r\n                            {option.rateDisplay}%\r\n                        </Box>\r\n                    </Flex>\r\n                    <Flex alignItems=\"center\" justify=\"space-between\" mt=\"5px\">\r\n                        <Box fontSize=\"16px\" fontWeight=\"700\" color=\"white\">\r\n                            Estimated Interests\r\n                        </Box>\r\n                        <Box fontSize=\"16px\" fontWeight=\"700\" color=\"white\">\r\n                            {calculateRate().toFixed(3)} KSC\r\n                        </Box>\r\n                    </Flex>\r\n                    <Button\r\n                        onClick={handleConfirmStake}\r\n                        color=\"#000000\"\r\n                        fontWeight=\"700\"\r\n                        background=\"#ffab00\"\r\n                        mt=\"10px\"\r\n                        isLoading={isLoading}\r\n                        disabled={isDisable() || disableConfirm || isLoading}\r\n                        loadingText=\"Loading\"\r\n                        fontSize=\"20px\"\r\n                        p=\"20px 100px\"\r\n                        w=\"100%\"\r\n                        _hover={{\r\n                            color: '#000000',\r\n                            background: '#ffab00',\r\n                        }}\r\n                    >\r\n                        Confirm\r\n                    </Button>\r\n                </Box>\r\n            </SimpleGrid>\r\n        </Box>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}